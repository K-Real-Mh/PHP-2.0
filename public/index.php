<?php


// 5. Дан код:
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// $a1 = new A();
// $a2 = new A();
// $a1->foo();
// $a2->foo();
// $a1->foo();
// $a2->foo();

// Тут создается два объекта из класса А, в котором содержится публичная функция, в которой производится прибавление еденицы к статической переменной. И т.к. переменная статическая т.е. общая, то при вызове этой функции из любого объекта будет происходить добавление еденицы к одной и той же переменной : 1234.

// 6. Немного изменим п.5:
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// class B extends A {
// }
// $a1 = new A();
// $b1 = new B();
// $a1->foo(); 
// $b1->foo(); 
// $a1->foo(); 
// $b1->foo();

// Тут Объекты создаются из разных классов и переменная является статичной и общей только для экземпляров этого класса, поэтому выводится 1122

// 7. *Дан код:
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// class B extends A {
// }
// $a1 = new A;
// $b1 = new B;
// $a1->foo(); 
// $b1->foo(); 
// $a1->foo(); 
// $b1->foo(); 

// Тут разница с прошлым заданием лишь в скобках в создании объектов. И так, как эти скобки необязательны, то результат не меняется.

//